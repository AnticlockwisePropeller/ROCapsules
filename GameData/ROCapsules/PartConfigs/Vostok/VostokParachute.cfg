PART
{
	module = Part
	name = ROC-VostokParachute
	author = RaiderNick, Pap
	
	RSSROConfig = true
	RP0conf = true
	
	//  ============================================================================
	//	Model and Dimensions
	//  ============================================================================
	
	MODEL
	{
		model = ROCapsules/Assets/RN/vostok_para
		scale = 1.0, 1.0, 1.0
	}
	
	scale = 1.0
	rescaleFactor = 1.0
	
	node_stack_para   = -0.81345, 0.2886, 0.0, 0.0, -1.0, 0.0, 1
	// stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,0,0
	
	bulkheadProfiles = size1
		
	//  ============================================================================
	//	Title, Description, Category, Techs
	//  ============================================================================
	
	title = Vostok/Voskhod Parachute
	manufacturer = OKB-1
	description = When Yuri Gagarin returned to Earth after the first maiden spaceflight, he ejected from the capsule and parachuted to the ground. It was not until later versions of the capsule was the Parachute added. Connect this to the open part of the capsule
	
	mass = 0.025
	
	category = Utility
	subcategory = 0
	
	tags = vostok, gagarin, soviet, para, parachute, voskhod
	
	TechRequired = unlockParts
	cost = 150
	entryCost = 1
	
	stageOffset = 1
	childStageOffset = 1
	
	//  ============================================================================
	//	Thermo, Durability
	//  ============================================================================
		
	crashTolerance = 8
	maxTemp = 3000
	skinMaxTemp = 4000
	emissiveConstant = 0.4 // not too absorptive for reentry
	thermalMassModifier = 1.0
	skinMassPerArea = 4
	
	//  ============================================================================
	//	Modules and Resources
	//  ============================================================================
	
	MODULE:NEEDS[!RealChute]
	{
		name = ModuleParachute
		semiDeployedAnimation = semi
		fullyDeployedAnimation = full
		invertCanopy = true
		autoCutSpeed = 0.5
		capName = cap
		canopyName = canopy
		stowedDrag = 0
		semiDeployedDrag = 5
		fullyDeployedDrag = 500
		minAirPressureToOpen = 0.04
		deployAltitude = 1000
		deploymentSpeed = 0.125
		semiDeploymentSpeed = 0.5
		chuteMaxTemp = 650	
	}	

	MODULE:NEEDS[!RealChute]
	{
		name = ModuleDragModifier
		dragCubeName = SEMIDEPLOYED
		dragModifier = 1.25
	}
	
	MODULE:NEEDS[!RealChute]
	{
		name = ModuleDragModifier
		dragCubeName = DEPLOYED
		dragModifier = 25
	}
	
	MODULE:NEEDS[RealChute]
	{
		name = RealChuteModule
        caseMass = 0.05
        timer = 0
        mustGoDown = false
        cutSpeed = 0.5
        spareChutes = 0
 
        PARACHUTE
        {
            material = Nylon
            preDeployedDiameter = 2
            deployedDiameter = 21
            minIsPressure = true
            minPressure = 0.01
            deploymentAlt = 2000
            cutAlt = -1
            preDeploymentSpeed = 2
            deploymentSpeed = 6
            preDeploymentAnimation = semi
            deploymentAnimation = full
            parachuteName = canopy
            capName = cap
        }
    }
	EFFECTS
	{
		rcpredeploy
		{
			AUDIO
			{
				channel = Ship
				clip = sound_parachute_open
				volume = 1
			}
		}

		rcdeploy
		{
			AUDIO
			{
				channel = Ship
				clip = sound_parachute_single
				volume = 1
			}
		}

		rccut
		{
			AUDIO
			{
				channel = Ship
				clip = RealChute/Sounds/sound_parachute_cut
				volume = 1
			}
		}

		rcrepack
		{
			AUDIO
			{
				channel = Ship
				clip = RealChute/Sounds/sound_parachute_repack
				volume = 1
			}
		}
	}	
	
	//  ============================================================================
	//	Animations and Textures
	//  ============================================================================
	
	MODULE:NEEDS[!TexturesUnlimited]
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = cap

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
	
}
