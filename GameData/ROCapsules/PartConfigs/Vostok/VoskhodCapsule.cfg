PART
{
	module = Part
	name = ROC-VoskhodCapsule
	author = RaiderNick, Pap
	
	RSSROConfig = true
	RP0conf = true
	
	//  ============================================================================
	//	Model and Dimensions
	//  ============================================================================
	
	MODEL
	{
		model = ROCapsules/Assets/RN/voskhod_sc
		scale = 1.0, 1.0, 1.0
	}
	
	scale = 1.0
	rescaleFactor = 1.0
	
	node_stack_bottom = 0.0, -1.12398, 0.0, 0.0, -1.0, 0.0, 1
	node_stack_top = 0.0, 1.12364, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_para = -0.81345, 0.2886, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_airlock = 0.0, 0.29699, 0.92451, 0.0, 1.0, 0.0, 1
	// stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0
	
	bulkheadProfiles = size1
	
	CoMOffset = 0.0, -0.4, 0.0
		
	//  ============================================================================
	//	Title, Description, Category, Techs
	//  ============================================================================
	
	title = Voskhod Descent Module
	manufacturer = OKB-1
	description = The Voskhod SA Descent Module was a re-purposed version of the Vostok SA. It was retrofitted to allow for an Airlock attachment for EVA and even to fit 3 cosmonauts. However, with 3 cosmonauts, there was not enough room to wear pressure suits. The SA stands for Spuskaemiy Apparat (Descent System) and was designed as a ballistic reentry capsule. [Diameter 2.3 m]
	
	mass = 2.325
	
	category = Pods
	subcategory = 0
	
	tags = soviet, capsule, crew, descent, voskhod
	
	TechRequired = unlockParts
	cost = 150
	entryCost = 1
	
	vesselType = Ship
	stagingIcon = COMMAND_POD
	CrewCapacity = 3
	
	INTERNAL
	{
		name = SoyuzPod
	}
	
	//  ============================================================================
	//	Thermo, Durability
	//  ============================================================================
		
	crashTolerance = 14
	maxTemp = 2400
	skinMaxTemp = 3600
	emissiveConstant = 0.4 // not too absorptive for reentry
	thermalMassModifier = 1.0
	skinMassPerArea = 4
	
	MODULE:NEEDS[!DeadlyReentry]
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -8000
		lossConst = 0.1
		pyrolysisLossFactor = 25000
		ablationTempThresh = 500
		reentryConductivity = 0.01
	}
	
	MODULE:NEEDS[DeadlyReentry]
	{
		name = ModuleHeatShield
		ablativeResource = Ablator
		lossExp = -8000
		lossConst = 0.1
		pyrolysisLossFactor = 25000
		ablationTempThresh = 500
		reentryConductivity = 0.01
		depletedMaxTemp = 1200
	}
	
	RESOURCE
	{
		name = Ablator
		amount = 225
		maxAmount = 225
	}
	
	//  ============================================================================
	//	Modules and Resources
	//  ============================================================================
	
	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 1.5 // A much higher requirement for 2-3 cosmonauts
		}
	}
	
	// Cannot EVA from Here - Must attach the Airlock and move into that
	MODULE:NEEDS[RP-0]
	{
		name = ModuleNoEVA
	}
	
	MODULE
	{
		name = ModuleScienceContainer
		reviewActionName = Review Stored Data
		storeActionName = Store Experiments
		storageRange = 3.0
	}
	
	MODULE
	{
		name = TacGenericConverter
		converterName = CO2 Scrubber
		StartActionName = Start CO2 Scrubber
		StopActionName = Stop CO2 Scrubber
		tag = Life Support
		GeneratesHeat = False
		UseSpecialistBonus = True
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		conversionRate = 3.0	// # of people - Figures based on per/person

		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.005921
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.01
		}

		INPUT_RESOURCE
		{
			ResourceName = PotassiumSuperoxide
			Ratio = 0.00001735323
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.006851
			DumpExcess = True
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.00006491
			DumpExcess = False
		}
	}
	
	MODULE
	{
		name = ModuleConnectedLivingSpace
		passable = true
		impassablenodes = bottom
	}
	
	MODULE
	{
		name = ModuleFuelTanks
		volume = 632.28
		type = Fuselage
		basemass = -1
		TANK
		{
			name = Food
			amount = 246
			maxAmount = 246
		}
		TANK
		{
			name = Water
			amount = 163
			maxAmount = 163
		}
		TANK
		{
			name = Oxygen
			amount = 23100
			maxAmount = 23100
		}
		TANK
		{
			name = CarbonDioxide
			amount = 0
			maxAmount = 256
		}
		TANK
		{
			name = Waste
			amount = 0
			maxAmount = 73
		}
		TANK
		{
			name = WasteWater
			amount = 0
			maxAmount = 25
		}
		TANK
		{
			name = ElectricCharge
			amount = 1000
			maxAmount = 1000
		}	
		TANK
		{
			name = PotassiumSuperoxide
			amount = 7.5
			maxAmount = 7.5
		}
	}
	
	MODULE
	{
		name = RasterPropMonitorComputer
	}
	
	//  ============================================================================
	//	Comms
	//  ============================================================================
	
	MODULE:NEEDS[!RemoteTech]
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 1.0
		requiredResource = ElectricCharge
		antennaPower = 400
		packetResourceCost = 0.004
	}
	
	MODULE:NEEDS[RemoteTech]
	{
		name = ModuleSPU
	}
	
	MODULE:NEEDS[RemoteTech]
    {
        name = ModuleRTAntennaPassive
        TechRequired = unlockParts

        OmniRange = 1000000

        TRANSMITTER
        {
            PacketInterval = 0.4
            PacketSize = 0.27
            PacketResourceCost = 0.025
        }
    }
	
	//  ============================================================================
	//	Animations and Textures
	//  ============================================================================
	
	MODULE
	{
		name = BDFSanimateGeneric
		animationName = Deploy
		startEventGUIName = Extend Antennae
		endEventGUIName = Retract Antennae
		toggleActionName = Toggle Antennae
		startDeployed = False
		// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, thatâ€™s probably on layer 0, so make this 1 or higher.
		layer = 1
		playAnimationOnEditorSpawn = False
		useActionEditorPopup = True
		// If you have more than one BDFSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
		moduleID = 0
	}
	
	MODULE:NEEDS[!TexturesUnlimited]
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = SC_Out,SC_HFOut,SC_HBOut,SC_CPanel

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}
