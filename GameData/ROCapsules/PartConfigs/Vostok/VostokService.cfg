PART
{
	module = Part
	name = ROC-VostokService
	author = RaiderNick, Pap
	
	RSSROConfig = true
	RP0conf = true
	
	//  ============================================================================
	//	Model and Dimensions
	//  ============================================================================
	
	MODEL
	{
		model = ROCapsules/Assets/RN/vostok_tdu
		scale = 1.0, 1.0, 1.0
	}
	
	scale = 1.0
	rescaleFactor = 1.0
	
	node_stack_top    = -0.000,  0.0,  0.000,  0.000,  1.000,  0.000, 2
	node_stack_bottom = -0.000, -0.95,  0.000,  0.000, -1.000,  0.000, 2
	// stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0
	
	bulkheadProfiles = size2
		
	//  ============================================================================
	//	Title, Description, Category, Techs
	//  ============================================================================
	
	title = Vostok/Voskhod Service Module
	manufacturer = OKB-1
	description = A service module with batteries a simple engine AK20/Tonka250 engine that has only 1 ignition. This is the same service module that you use for Vostok and Voskhod. Attach the Decoupler to the Descent Module first and attach this to the bottom of the Descent Module.
	
	mass = 1.924
	
	category = Control
	subcategory = 0
	
	tags = vostok, gagarin, soviet, service, module, voskhod
	
	TechRequired = unlockParts
	cost = 150
	entryCost = 1
	
	stagingIcon = LIQUID_ENGINE
	
	//  ============================================================================
	//	Thermo, Durability
	//  ============================================================================
		
	crashTolerance = 5
	maxTemp = 2400
	skinMaxTemp = 3600
	
	//  ============================================================================
	//	Modules and Resources
	//  ============================================================================
	
	MODULE
	{
		name = ModuleFuelTanks
		volume = 382.1287
		type = Fuselage
		basemass = -1
		TANK
		{
			name = AK20
			amount = 138.3789
			maxAmount = 138.3789
		}
		TANK
		{
			name = Tonka250
			amount = 77.3998
			maxAmount = 77.3998
		}
		TANK
		{
			name = ElectricCharge
			amount = 86400
			maxAmount = 86400
		}
		TANK
		{
			name = Nitrogen
			amount = 15990
			maxAmount = 15990
		}
	}
	
	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.30 // A little more than half the Mercury Capsule
		}
	}
	
	MODULE
	{
		name = ModuleEnginesRF
		thrustVectorTransformName = thrustTransform
	}
	
	MODULE
	{
		name = ModuleEngineConfigs
		type = ModuleEngines
		configuration = S5.4
		modded = false
		
		CONFIG
		{
			name = S5.4
			minThrust = 15.83
			maxThrust = 15.83
			heatProduction = 100
			PROPELLANT
			{
				name = AK20
				ratio = 0.6413
				DrawGauge = True
			}
			PROPELLANT
			{
				name = Tonka250
				ratio = 0.3587
			}
			atmosphereCurve
			{
				key = 0 266
				key = 1 112
			}
		}
	}	
	
	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.3
		maxDistance = 30
		falloff = 1.7
		thrustTransformName = thrustTransform
	}

  	MODULE
	{
		name = ModuleJettison
		jettisonName = Fairing1
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.1
		jettisonForce = 5
		jettisonDirection = 0 0 1
	}

    MODULE
    {
        name = ModuleRCSFX
        stagingEnabled = false
        showToggles = false

        currentShowToggles = false

        thrusterTransformName = RCSthruster
        thrusterPower = 0.05

        resourceFlowMode = STAGE_PRIORITY_SEARCH
        runningEffectName = running

        PROPELLANT
		{
			ratio = 1.0
			name = Nitrogen
		}
		
        atmosphereCurve
        {
            key = 0 65
            key = 1 10
        }
    }
	
	MODULE
	{
		name = ModuleAvionics
		massLimit = 10.0
		interplanetary = False
	}
	
	EFFECTS
	{
	    running
        {
			AUDIO_MULTI_POOL
			{
				channel = Ship
				transformName = RCSthruster
				clip = sound_rocket_hard
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = RCSthruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
        }
	}
	
	//  ============================================================================
	//	Comms
	//  ============================================================================
	
	MODULE:NEEDS[!RemoteTech]
	{
		name = ModuleDataTransmitter
		antennaType = INTERNAL
		packetInterval = 1.0
		packetSize = 1.0
		requiredResource = ElectricCharge
		antennaPower = 400
		packetResourceCost = 0.004
	}
	
	MODULE:NEEDS[RemoteTech]
	{
		name = ModuleSPUPassive
	}
	
	MODULE:NEEDS[RemoteTech]
	{
		name = ModuleRTAntennaPassive
		OmniRange = 1000000
		TRANSMITTER
		{
			PacketInterval = 0.3
			PacketSize = 0.4
			PacketResourceCost = 0
		}
	}
	
	
	//  ============================================================================
	//	Animations and Textures
	//  ============================================================================
	
	MODULE
	{
		name = BDFSanimateGeneric
		animationName = Deploy
		startEventGUIName = Deploy Radiators
		endEventGUIName = Undeploy Radiators
		toggleActionName = Toggle Radiators
		startDeployed = False
		// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
		layer = 1
		playAnimationOnEditorSpawn = False
		useActionEditorPopup = True
		// If you have more than one BDFSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
		moduleID = 0
	}
	MODULE
	{
		name = BDFSanimateGeneric
		animationName = Open
		startEventGUIName = Deploy Antennas
		endEventGUIName = Undeploy Antennas
		toggleActionName = Toggle Antennas
		startDeployed = False
		// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
		layer = 2
		playAnimationOnEditorSpawn = False
		useActionEditorPopup = True
		// If you have more than one BDFSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
		moduleID = 1
	}

    MODULE:NEEDS[!TexturesUnlimited]
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = TDU_SHolder1,TDU_SHolder2,TDU_SHolder3,TDU_SHolder4,TDU_BHolders,TDU_CBoxes,TDU_LSensors,TDU_Radiator3L,TDU_Radiator3R,TDU_Radiator3L.001,TDU_Radiator3R.001,TDU_Radiator3L.002,TDU_Radiator3R.002,TDU_Radiator3L.003,TDU_Radiator3R.003,TDU_Radiator3L.004,TDU_Radiator3R.004,TDU_Radiator3L.005,TDU_Radiator3R.005,TDU_Radiator3L.006,TDU_Radiator3R.006,TDU_Radiator3L.007,TDU_Radiator3R.007

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
	
}
